buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin-platform-jvm'
//apply plugin: 'application'
//apply plugin: 'maven'

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


//mainClassName = 'tech.kzen.launcher.server.Main'
//
//jar {
//    manifest {
//        attributes 'Main-Class': mainClassName
//    }
//    // Includes all dependencies in the jar, so it can be a standalone runnable jar application:
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}


dependencies {
    expectedBy project(':kzen-launcher-common')
    compile project(":kzen-launcher-js")

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlinVersion
    compile("org.jetbrains.kotlin:kotlin-reflect")

    compile('org.springframework.boot:spring-boot-starter-webflux')
//    compile("org.springframework.boot:spring-boot-starter-websocket")

    compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5')
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.5')
    compile "com.google.guava:guava:25.0-jre"

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlinVersion
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlinVersion
}


compileKotlin {
    targetCompatibility = javaVersion
    sourceCompatibility = javaVersion
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}

processResources {
    from ('../kzen-launcher-js/build/dist/') {
        into 'public'
    }
}